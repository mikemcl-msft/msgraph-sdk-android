// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.generated;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.extensions.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.generated.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.List;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Page Stream Request Builder.
 */
public class BasePageStreamRequestBuilder extends BaseRequestBuilder implements IBasePageStreamRequestBuilder {

    /**
     * The request builder for the Page
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public BasePageStreamRequestBuilder(final String requestUrl, final IBaseClient client, final List<Option> options) {
        super(requestUrl, client, options);
    }

    /**
     * Creates the request
     */
    public IPageStreamRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific options instead of the existing options
     */
    public IPageStreamRequest buildRequest(final List<Option> options) {
        return new PageStreamRequest(getRequestUrl(), getClient(), options);
    }

    /**
     * Gets the request builder for Section.
     */
    public ISectionRequestBuilder getParentSection() {
        return new SectionRequestBuilder(getRequestUrlWithAdditionalSegment("parentSection"), getClient(), null);
    }

    /**
     * Gets the request builder for Notebook.
     */
    public INotebookRequestBuilder getParentNotebook() {
        return new NotebookRequestBuilder(getRequestUrlWithAdditionalSegment("parentNotebook"), getClient(), null);
    }

    public IPageStreamRequestBuilder getContent() {
        return new PageStreamRequestBuilder(getRequestUrlWithAdditionalSegment("content"), getClient(), null);
    }



    public IPagePatchContentRequestBuilder getPatchContent(final List<PatchContentCommand> commands) {
        return new PagePatchContentRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.PatchContent"), getClient(), null, commands);
    }

    public IPageCopyToSectionRequestBuilder getCopyToSection(final String id, final String groupId) {
        return new PageCopyToSectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.CopyToSection"), getClient(), null, id, groupId);
    }
}
