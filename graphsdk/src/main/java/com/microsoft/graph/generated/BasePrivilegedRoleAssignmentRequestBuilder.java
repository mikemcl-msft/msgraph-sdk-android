// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.generated;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.extensions.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.generated.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Privileged Role Assignment Request Builder.
 */
public class BasePrivilegedRoleAssignmentRequestBuilder extends BaseRequestBuilder implements IBasePrivilegedRoleAssignmentRequestBuilder {

    /**
     * The request builder for the PrivilegedRoleAssignment
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param requestOptions The options for this request
     */
    public BasePrivilegedRoleAssignmentRequestBuilder(final String requestUrl, final IBaseClient client, final List<Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     */
    public IPrivilegedRoleAssignmentRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     */
    public IPrivilegedRoleAssignmentRequest buildRequest(final List<Option> requestOptions) {
        return new PrivilegedRoleAssignmentRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     * Gets the request builder for PrivilegedRole.
     */
    public IPrivilegedRoleRequestBuilder getRoleInfo() {
        return new PrivilegedRoleRequestBuilder(getRequestUrlWithAdditionalSegment("roleInfo"), getClient(), null);
    }

    public IPrivilegedRoleAssignmentMakePermanentRequestBuilder getMakePermanent(final String reason, final String ticketNumber, final String ticketSystem) {
        return new PrivilegedRoleAssignmentMakePermanentRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.makePermanent"), getClient(), null, reason, ticketNumber, ticketSystem);
    }

    public IPrivilegedRoleAssignmentMakeEligibleRequestBuilder getMakeEligible() {
        return new PrivilegedRoleAssignmentMakeEligibleRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.makeEligible"), getClient(), null);
    }
}
