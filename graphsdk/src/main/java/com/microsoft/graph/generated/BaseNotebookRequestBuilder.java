// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.generated;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.extensions.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.generated.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.List;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Notebook Request Builder.
 */
public class BaseNotebookRequestBuilder extends BaseRequestBuilder implements IBaseNotebookRequestBuilder {

    /**
     * The request builder for the Notebook
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public BaseNotebookRequestBuilder(final String requestUrl, final IBaseClient client, final List<Option> options) {
        super(requestUrl, client, options);
    }

    /**
     * Creates the request
     */
    public INotebookRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific options instead of the existing options
     */
    public INotebookRequest buildRequest(final List<Option> options) {
        return new NotebookRequest(getRequestUrl(), getClient(), options);
    }

    public ISectionCollectionRequestBuilder getSections() {
        return new SectionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("sections"), getClient(), null);
    }

    public ISectionRequestBuilder getSections(final String id) {
        return new SectionRequestBuilder(getRequestUrlWithAdditionalSegment("sections") + "/" + id, getClient(), null);
    }
    public ISectionGroupCollectionRequestBuilder getSectionGroups() {
        return new SectionGroupCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("sectionGroups"), getClient(), null);
    }

    public ISectionGroupRequestBuilder getSectionGroups(final String id) {
        return new SectionGroupRequestBuilder(getRequestUrlWithAdditionalSegment("sectionGroups") + "/" + id, getClient(), null);
    }

    public INotebookCopyNotebookRequestBuilder getCopyNotebook(final String groupId, final String renameAs, final String notebookFolder) {
        return new NotebookCopyNotebookRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.CopyNotebook"), getClient(), null, groupId, renameAs, notebookFolder);
    }

    public INotebookExportNotebookRequestBuilder getExportNotebook() {
        return new NotebookExportNotebookRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.ExportNotebook"), getClient(), null);
    }

    public INotebookImportNotebookRequestBuilder getImportNotebook() {
        return new NotebookImportNotebookRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.ImportNotebook"), getClient(), null);
    }
}
