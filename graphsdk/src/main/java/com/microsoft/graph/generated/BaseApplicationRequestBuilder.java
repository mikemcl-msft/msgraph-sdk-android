// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.generated;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.extensions.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.generated.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Application Request Builder.
 */
public class BaseApplicationRequestBuilder extends BaseRequestBuilder implements IBaseApplicationRequestBuilder {

    /**
     * The request builder for the Application
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param requestOptions The options for this request
     */
    public BaseApplicationRequestBuilder(final String requestUrl, final IBaseClient client, final List<Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     */
    public IApplicationRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     */
    public IApplicationRequest buildRequest(final List<Option> requestOptions) {
        return new ApplicationRequest(getRequestUrl(), getClient(), requestOptions);
    }

    public IExtensionPropertyCollectionRequestBuilder getExtensionProperties() {
        return new ExtensionPropertyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("extensionProperties"), getClient(), null);
    }

    public IExtensionPropertyRequestBuilder getExtensionProperties(final String id) {
        return new ExtensionPropertyRequestBuilder(getRequestUrlWithAdditionalSegment("extensionProperties") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DirectoryObject.
     */
    public IDirectoryObjectWithReferenceRequestBuilder getCreatedOnBehalfOf() {
        return new DirectoryObjectWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("createdOnBehalfOf"), getClient(), null);
    }
    public IDirectoryObjectCollectionWithReferencesRequestBuilder getOwners() {
        return new DirectoryObjectCollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("owners"), getClient(), null);
    }

    public IDirectoryObjectWithReferenceRequestBuilder getOwners(final String id) {
        return new DirectoryObjectWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("owners") + "/" + id, getClient(), null);
    }
    public IDirectoryObjectCollectionWithReferencesRequestBuilder getPolicies() {
        return new DirectoryObjectCollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("policies"), getClient(), null);
    }

    public IDirectoryObjectWithReferenceRequestBuilder getPolicies(final String id) {
        return new DirectoryObjectWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("policies") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for ConnectorGroup.
     */
    public IConnectorGroupWithReferenceRequestBuilder getConnectorGroup() {
        return new ConnectorGroupWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("connectorGroup"), getClient(), null);
    }

    public IApplicationStreamRequestBuilder getMainLogo() {
        return new ApplicationStreamRequestBuilder(getRequestUrlWithAdditionalSegment("mainLogo"), getClient(), null);
    }
}
