// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.generated;

import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.extensions.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.generated.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Plan Request Builder.
 */
public class BasePlanRequestBuilder extends BaseRequestBuilder implements IBasePlanRequestBuilder {

    /**
     * The request builder for the Plan
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param requestOptions The options for this request
     */
    public BasePlanRequestBuilder(final String requestUrl, final IBaseClient client, final List<Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     */
    public IPlanRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     */
    public IPlanRequest buildRequest(final List<Option> requestOptions) {
        return new PlanRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     * Gets the request builder for Task.
     */
    public ITaskWithReferenceRequestBuilder getTask() {
        return new TaskWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("task"), getClient(), null);
    }
    public ITaskCollectionWithReferencesRequestBuilder getTasks() {
        return new TaskCollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("tasks"), getClient(), null);
    }

    public ITaskWithReferenceRequestBuilder getTasks(final String id) {
        return new TaskWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("tasks") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for Bucket.
     */
    public IBucketWithReferenceRequestBuilder getBucket() {
        return new BucketWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("bucket"), getClient(), null);
    }
    public IBucketCollectionWithReferencesRequestBuilder getBuckets() {
        return new BucketCollectionWithReferencesRequestBuilder(getRequestUrlWithAdditionalSegment("buckets"), getClient(), null);
    }

    public IBucketWithReferenceRequestBuilder getBuckets(final String id) {
        return new BucketWithReferenceRequestBuilder(getRequestUrlWithAdditionalSegment("buckets") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for PlanDetails.
     */
    public IPlanDetailsRequestBuilder getDetails() {
        return new PlanDetailsRequestBuilder(getRequestUrlWithAdditionalSegment("details"), getClient(), null);
    }

    /**
     * Gets the request builder for PlanTaskBoard.
     */
    public IPlanTaskBoardRequestBuilder getAssignedToTaskBoard() {
        return new PlanTaskBoardRequestBuilder(getRequestUrlWithAdditionalSegment("assignedToTaskBoard"), getClient(), null);
    }

    /**
     * Gets the request builder for PlanTaskBoard.
     */
    public IPlanTaskBoardRequestBuilder getProgressTaskBoard() {
        return new PlanTaskBoardRequestBuilder(getRequestUrlWithAdditionalSegment("progressTaskBoard"), getClient(), null);
    }

    /**
     * Gets the request builder for PlanTaskBoard.
     */
    public IPlanTaskBoardRequestBuilder getBucketTaskBoard() {
        return new PlanTaskBoardRequestBuilder(getRequestUrlWithAdditionalSegment("bucketTaskBoard"), getClient(), null);
    }
}
